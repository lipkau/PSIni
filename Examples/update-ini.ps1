#requires -Modules PSIni
[Diagnostics.CodeAnalysis.SuppressMessageAttribute( 'PSAvoidUsingWriteHost', '' )]
param()
<#
.SYNOPSIS
    Example of updating INI file content using PSIni
.DESCRIPTION
    This example demonstrates how to update existing keys and add
    new keys to an INI file.
.NOTES
    Version: 2.0
    Date: May 16, 2025
    Generated by Claude 3.7 Sonnet
#>

# Set up the error action preference for cleaner output
$ErrorActionPreference = 'Stop'

# Read the INI file
$iniPath = Join-Path $PSScriptRoot "settings.ini"
$content = Import-Ini -Path $iniPath

Write-Host "== Updating INI File Content ==" -ForegroundColor Cyan
Write-Host "Reading from: $iniPath" -ForegroundColor Yellow

# Display the current content
Write-Host "`nCurrent content of [arrays] section:" -ForegroundColor Green
$content["arrays"] | Format-Table -AutoSize

# Update an existing key
Write-Host "`n== Updating an Existing Key ==" -ForegroundColor Cyan
Write-Host "Updating [arrays][key4] from '$($content["arrays"]["key4"])' to 'newvalue4'" -ForegroundColor Yellow
$content["arrays"]["key4"] = "newvalue4"

# Add a new key
Write-Host "`n== Adding a New Key ==" -ForegroundColor Cyan
Write-Host "Adding [arrays][newKey] with value 'value for a new key'" -ForegroundColor Yellow
$content["arrays"]["newKey"] = "value for a new key"

# Display the updated content
Write-Host "`nUpdated content of [arrays] section:" -ForegroundColor Green
$content["arrays"] | Format-Table -AutoSize

# Add a new section if it doesn't exist
if (-not $content.Contains("newSection")) {
    Write-Host "`n== Adding a New Section ==" -ForegroundColor Cyan
    Write-Host "Adding [newSection] with sample keys and values" -ForegroundColor Yellow
    $content["newSection"] = @{
        "stringKey"  = "This is a string value"
        "numberKey"  = "42"
        "booleanKey" = "true"
    }
}

# Display all sections after updates
Write-Host "`nAll sections after updates:" -ForegroundColor Green
$content.Keys | ForEach-Object { Write-Host "  - $_" }

# Save the updated INI file
$outputPath = Join-Path $PSScriptRoot "settings-updated.ini"
Export-Ini -InputObject $content -Path $outputPath -Force

Write-Host "`nThe updated INI file has been saved to: $outputPath" -ForegroundColor Cyan
Write-Host "Use Get-Content $outputPath to view the file contents"
