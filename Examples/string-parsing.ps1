#requires -Modules PSIni
[Diagnostics.CodeAnalysis.SuppressMessageAttribute( 'PSAvoidUsingWriteHost', '' )]
param()
<#
.SYNOPSIS
    Example of using PSIni to parse INI from a string
.DESCRIPTION
    This example demonstrates how to directly parse INI content from a string
    and access the values without creating a file.
    This can be useful for ini files read via HTTP or other sources which are not on disk.
.NOTES
    Version: 1.0
    Date: May 16, 2025
    Generated by Claude 3.7 Sonnet
#>

# Set up the error action preference for cleaner output
$ErrorActionPreference = 'Stop'

Write-Host "== Parsing INI Content from the Command Line ==" -ForegroundColor Cyan

# Example INI content as a here-string
$iniContent = @"
[ConnectionSettings]
Host=example.com
Port=443
Secure=true

[Authentication]
Type=OAuth2
ClientId=app_client_id
ClientSecret=app_client_secret

[Features]
Enabled=Logging
Enabled=Metrics
Enabled=Alerting
"@

Write-Host "`nINI content to parse:" -ForegroundColor Yellow
$iniContent -split "`n" | ForEach-Object { Write-Host "  $_" }

# Parse the INI content directly without creating a file
Write-Host "`nParsing INI content using -InputString..." -ForegroundColor Cyan
$config = Import-Ini -InputString $iniContent

# Display the parsed content
Write-Host "`nParsed content:" -ForegroundColor Green
foreach ($section in $config.Keys) {
    Write-Host "[$section]" -ForegroundColor Yellow
    foreach ($key in $config[$section].Keys) {
        # Check if value is an array
        if ($config[$section][$key] -is [System.Collections.ArrayList]) {
            Write-Host "  $key = (Array with $($config[$section][$key].Count) items)"
            $config[$section][$key] | ForEach-Object { Write-Host "    - $_" }
        }
        else {
            Write-Host "  $key = $($config[$section][$key])"
        }
    }
}

# Access specific values
Write-Host "`n== Accessing Specific Values ==" -ForegroundColor Cyan
$hostname = $config.ConnectionSettings.Host
$port = $config.ConnectionSettings.Port
Write-Host "Connection String: $hostname`:$port" -ForegroundColor Green

# Working with array values
Write-Host "`n== Working with Array Values ==" -ForegroundColor Cyan
$enabledFeatures = $config.Features.Enabled
Write-Host "Enabled Features:" -ForegroundColor Green
$enabledFeatures | ForEach-Object { Write-Host "  - $_" }

# Add a new feature to the array
Write-Host "`nAdding 'Reporting' to enabled features..." -ForegroundColor Yellow
$config.Features.Enabled.Add("Reporting") | Out-Null
Write-Host "Updated enabled features:" -ForegroundColor Green
$config.Features.Enabled | ForEach-Object { Write-Host "  - $_" }

# Saving the INI file with the updated value
$outputPath = Join-Path $PSScriptRoot "settings-string-parsing.ini"
Export-Ini -InputObject $config -Path $outputPath -Force
Write-Host "`nThe updated INI file has been saved to: $outputPath" -ForegroundColor Cyan
Write-Host "Use Get-Content $outputPath to view the file contents"
