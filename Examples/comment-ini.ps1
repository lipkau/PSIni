#requires -Modules PSIni
[Diagnostics.CodeAnalysis.SuppressMessageAttribute( 'PSAvoidUsingWriteHost', '' )]
param()
<#
.SYNOPSIS
    Example of working with comments in INI files using PSIni
.DESCRIPTION
    This example demonstrates how to work with comments in INI files, including:
    - Adding comments to an INI file
    - Converting an existing key to a comment
.NOTES
    Version: 2.0
    Date: May 16, 2025
    Generated by Claude 3.7 Sonnet
#>

# Set up the error action preference for cleaner output
$ErrorActionPreference = 'Stop'

# Read the sample INI file
$content = Import-Ini -Path (Join-Path $PSScriptRoot "settings.ini")

Write-Host "== Working with Comments in INI Files ==" -ForegroundColor Cyan

# Display the initial content
Write-Host "Initial content of keysAndComments section:" -ForegroundColor Yellow
$content["keysAndComments"] | Format-Table -AutoSize

# Add a new comment to the section
Write-Host "`n== Adding a New Comment ==" -ForegroundColor Cyan
Write-Host "Adding a new comment to the section..." -ForegroundColor Yellow
$content["keysAndComments"]["__Comment3"] = "This is a new comment added by script"

# Display the content after adding the comment
Write-Host "Content after adding comment:" -ForegroundColor Green
$content["keysAndComments"] | Format-Table -AutoSize

# Convert an existing key to a comment (backup a value as a comment)
Write-Host "`n== Converting a Key to a Comment ==" -ForegroundColor Cyan
Write-Host "Converting 'key4' to a comment..." -ForegroundColor Yellow

# Store the key's value in a comment
$content["keysAndComments"]["__Comment4"] = "key4 = $($content["keysAndComments"]["key4"]) (archived)"

# Remove the original key
$content["keysAndComments"].Remove("key4")

# Display the content after converting the key to a comment
Write-Host "Content after converting key4 to a comment:" -ForegroundColor Green
$content["keysAndComments"] | Format-Table -AutoSize

# Saving the INI file with comments
$outputPath = Join-Path $PSScriptRoot "settings-with-comments.ini"
Export-Ini -InputObject $content -Path $outputPath -Force
Write-Host "`nThe INI file with comments has been saved to: $outputPath" -ForegroundColor Cyan
Write-Host "Use Get-Content $outputPath to view the file contents"
