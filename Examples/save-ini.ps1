#requires -Modules PSIni
[Diagnostics.CodeAnalysis.SuppressMessageAttribute( 'PSAvoidUsingWriteHost', '' )]
param()
<#
.SYNOPSIS
    Example of creating and saving INI files using PSIni
.DESCRIPTION
    This example demonstrates how to create INI file content in PowerShell
    and save it to a file.
.NOTES
    Version: 2.0
    Date: May 16, 2025
    Generated by Claude 3.7 Sonnet
#>

# Set up the error action preference for cleaner output
$ErrorActionPreference = 'Stop'

Write-Host "== Creating and Saving INI Files ==" -ForegroundColor Cyan

# Method 1: Creating INI content using nested hashtables
Write-Host "`n1. Creating INI content using nested hashtables" -ForegroundColor Yellow
$category1 = @{
    "key1" = "value1"
    "key2" = "value2"
}
$category2 = @{
    "key3" = "value3"
    "key4" = "value4"
}
$content = @{
    "category1" = $category1
    "category2" = $category2
}

# Method 2: Creating INI content using ordered dictionaries (preserves order)
Write-Host "`n2. Creating INI content using ordered dictionaries" -ForegroundColor Yellow
$orderedContent = [ordered]@{
    "section1" = [ordered]@{
        "string"      = "This is a string value"
        "integer"     = "42"
        "boolean"     = "true"
        "with_spaces" = "This value has spaces"
        "with_quotes" = "`"Quoted value`""
    }
    "section2" = [ordered]@{
        "array" = "value1"  # Will become an ArrayList when multiple values are added
    }
}

# Add multiple values for the same key (creates an array)
$orderedContent["section2"]["array"] = "value2"
$orderedContent["section2"]["array"] = "value3"

# Save the first content to a file
$outputPath1 = Join-Path $PSScriptRoot "sample-basic.ini"
Export-Ini -InputObject $content -Path $outputPath1 -Force
Write-Host "`nSaved basic INI file to: $outputPath1" -ForegroundColor Green
Write-Host "Content of the saved file:" -ForegroundColor Yellow
Get-Content $outputPath1 | ForEach-Object { Write-Host "  $_" }

# Save the ordered content to a file
$outputPath2 = Join-Path $PSScriptRoot "sample-ordered.ini"
Export-Ini -InputObject $orderedContent -Path $outputPath2 -Force
Write-Host "`nSaved ordered INI file to: $outputPath2" -ForegroundColor Green
Write-Host "Content of the saved file:" -ForegroundColor Yellow
Get-Content $outputPath2 | ForEach-Object { Write-Host "  $_" }

# Example: Save with pretty formatting
$outputPath3 = Join-Path $PSScriptRoot "sample-pretty.ini"
Export-Ini -InputObject $orderedContent -Path $outputPath3 -Force -Format Pretty
Write-Host "`nSaved pretty-formatted INI file to: $outputPath3" -ForegroundColor Green
Write-Host "Content of the pretty-formatted file:" -ForegroundColor Yellow
Get-Content $outputPath3 | ForEach-Object { Write-Host "  $_" }
